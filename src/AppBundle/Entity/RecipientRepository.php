<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecipientRepository extends \Doctrine\ORM\EntityRepository
{
	//Get count number of opt out for one campaign
	public function getNbOptOut($campaign)
	{
		$qb = $this->createQueryBuilder('r')
			->select('COUNT(r)')					#Add the count when return getSingleScalarResult
			->where('r.campaign = :campaign')
			->setParameter('campaign', $campaign)
			->andWhere('r.optIn = :optIn')
			->setParameter('optIn', 0)
		;

		return $qb
			->getQuery()
			->getSingleScalarResult();
			//->getResult();
	}

	//Get count number of opt in for one campaign
	public function getNbOptIn($campaign)
	{
		$qb = $this->createQueryBuilder('r')
			->select('COUNT(r)')
			->where('r.campaign = :campaign')
			->setParameter('campaign', $campaign)
			->andWhere('r.optIn = :optIn')
			->setParameter('optIn', 1)
		;

		return $qb
			->getQuery()
			->getSingleScalarResult();
			//->getResult();
	}

	//Get count number of clients for one campaign
	public function getTotalRecipientsForCampaign($campaign)
	{
		$qb = $this->createQueryBuilder('r')
			->select('COUNT(r)')
			->where('r.campaign = :campaign')
			->setParameter('campaign', $campaign)
		;

		return $qb
			->getQuery()
			->getSingleScalarResult();
			//->getResult();
	}

	//Get count number of contacted clients for one campaign
	public function getNbContacted($campaign)
	{

		$qb = $this->createQueryBuilder('r')
			->select('COUNT(r)');

		$qb= $qb->where('r.campaign = :campaign')
			->setParameter('campaign', $campaign)
			->andWhere($qb->expr()->isNotNull('r.contactedAt'))
		;

		return $qb
			->getQuery()
			->getSingleScalarResult();
			//->getResult();
	}

	//Get the selected client of one campaign
	public function getClientCampaign($campaign, $client)
	{
		$qb = $this->createQueryBuilder('r')
			->where('r.campaign = :campaign')
			->setParameter('campaign', $campaign)
			->andWhere('r.client = :client')
			->setParameter('client', $client)
			->setMaxResults(1)
		;

		/*$qb = $this->createQueryBuilder('r')
			->where('r.campaign = :campaign')
			->getParameter('campaign', $campaign)
			->andWhere('r.client = :client')
			->getParameter('client', $client)
			->setMaxResults(1)
		;*/

		return $qb
			->getQuery()
			->getResult()
			//->getArrayResult()
			;
	}	

	//Get clients for one campaign
	public function getClientsForCampaign($campaign)
	{
		$qb = $this->createQueryBuilder('r')
			->leftJoin('r.client', 'c')
			->addSelect('c')
			->where('r.campaign = :campaign')
			->setParameter('campaign', $campaign)
			->orderBy('r.contactedAt', 'ASC')
		;

		return $qb
			->getQuery()
			->getResult();
	}	
	
}
