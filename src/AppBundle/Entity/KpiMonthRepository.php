<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

use Application\Sonata\UserBundle\Entity\User;

/**
 * KpiMonthRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KpiMonthRepository extends EntityRepository
{
	public function getUserKpisBetweenDates(User $user, $date1, $date2, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.user = :user')
		  	->setParameter('user', $user)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('k.date BETWEEN :date1 AND :date2')		  	
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		;

		return $qb
			->getQuery()
			->getResult();
	}

	public function getTop3Ca($brand){
		$qb = $this
			->createQueryBuilder('k')
		  	->orderBy('k.caClientsTransformesM0', 'DESC')
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->where('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('u.role = :role')
		  	->setParameter('role', "ROLE_BOUTIQUE")
		  	->setMaxResults(3);
		;

		return $qb
			->getQuery()
			->getResult();
	}

	public function getRank1Npe($date1, $date2, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.rankNpeM0 = :val')
			->setParameter(':val', 1)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->andWhere('u.role = :role')
		  	->setParameter('role', "ROLE_BOUTIQUE")
		  	->orderBy('k.rankNpeM0', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	public function getRank1Npes($date1, $date2, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.rankNpesM0= :val')
			->setParameter(':val', 1)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->andWhere('u.role = :role')
		  	->setParameter('role', "ROLE_BOUTIQUE")
		  	->orderBy('k.rankNpesM0', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	public function getRank1Npesa($date1, $date2, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.rankNpesaM0 = :val')
			->setParameter(':val', 1)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->andWhere('u.role = :role')
		  	->setParameter('role', "ROLE_BOUTIQUE")
		  	->orderBy('k.rankNpesaM0', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}
}
