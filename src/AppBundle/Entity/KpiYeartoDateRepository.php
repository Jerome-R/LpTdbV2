<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

use Application\Sonata\UserBundle\Entity\User;

/**
 * KpiYeartoDateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KpiYeartoDateRepository extends EntityRepository
{
	public function getUserKpiYtd(USer $user, $year, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.date BETWEEN :date1 AND :date2')
			->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')
		  	->andWhere('k.username = :username')		  	
		  	->setParameter('brand', $brand)
		  	->setParameter('username', $user->getUsername())
		  	->setParameter('date1', $year.'-01-01')
		  	->setParameter('date2', $year.'-12-31')
		  	->orderBy('k.date', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	public function getRank1Npe($date1,$date2, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.rankNpeYtd = :val')
			->setParameter(':val', 1)
			->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->andWhere('u.role = :role')
		  	->setParameter('role', "ROLE_BOUTIQUE")
		  	->orderBy('k.rankNpeYtd', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	public function getRank1Npes($date1,$date2, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.rankNpesYtd= :val')
			->setParameter(':val', 1)
			->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->andWhere('u.role = :role')
		  	->setParameter('role', "ROLE_BOUTIQUE")
		  	->orderBy('k.rankNpesYtd', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	public function getRank1Npesa($date1,$date2, $brand){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.rankNpesaYtd = :val')
			->setParameter(':val', 1)
			->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('u.brand = :brand')		  	
		  	->setParameter('brand', $brand)
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)		  	->andWhere('u.role = :role')
		  	->setParameter('role', "ROLE_BOUTIQUE")
		  	->orderBy('k.rankNpesaYtd', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	public function getLastKpiOfYear($year, $username,$brand){

		$qb = $this
			->createQueryBuilder('k')
			->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->where('u.brand = :brand')		
		  	->andWhere('k.username = :username')		  	
		  	->setParameter('brand', $brand)
		  	->setParameter('username', $username)
		  	->andWhere('k.date <= :date')
		  	->setParameter('date', $year.'-12-31')
		  	->orderBy('k.date', 'DESC')
		  	->setMaxResults(1)
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}
}
